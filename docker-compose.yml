version: '3'
services:
   frontend:
     build: ./frontend
     ports:
     - "3000:3000"
     volumes:
       - ./frontend:/app
       - /app/node_modules
     environment:
       - CHOKIDAR_USEPOLLING=true
   storybook:
     build:
       context: ./frontend
       dockerfile: Dockerfile.init.storybook
     ports:
       - "6006:6006"
     volumes:
       - ./frontend:/app
       - /app/node_modules
     environment:
       - NODE_ENV=development
   dynamodb-local:
    image: amazon/dynamodb-local
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb -inMemory"
   dynamodb-healthcheck:
    image: amazon/aws-cli
    depends_on:
      - dynamodb-local
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - AWS_DEFAULT_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      while ! aws dynamodb list-tables --endpoint-url http://dynamodb-local:8000 2>/dev/null; do
        echo 'Waiting for DynamoDB to be ready...';
        sleep 1;
      done;
      echo 'DynamoDB is ready!';
      exit 0;
      "
   dynamodb-init:
    build: 
      context: ./backend
      dockerfile: Dockerfile.init
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - AWS_DEFAULT_REGION=us-east-1
      - DYNAMODB_TABLE_NAME=GameTable
      - DATABASE_URL=http://dynamodb-local:8000
    depends_on:
      dynamodb-healthcheck:
        condition: service_completed_successfully
    restart: on-failure:3

